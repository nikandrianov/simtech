{"version":3,"sources":["assets/image/nofoto.png","component/Login.js","actions/index.js","actions/types.js","component/Table.js","component/Admin.js","containers/PrivateRoute.js","component/ProfileUser.js","component/User.js","App.js","serviceWorker.js","reducers/auth.reducer.js","reducers/user.reducer.js","reducers/index.js","index.js"],"names":["module","exports","Login","props","handleSubmit","e","preventDefault","state","username","password","logIn","setState","redirectToPreviousRoute","handleChange","value","currentTarget","fieldName","dataset","prev","errorMsg","this","to","className","onSubmit","htmlFor","type","name","placeholder","onChange","data-field-name","Component","connect","auth","dispatch","params","cb","toLowerCase","checkCredentials","checkCredentialsUser","payload","error","SortableItem","SortableElement","SortableList","SortableContainer","items","map","index","key","id","department","SortableComponent","userList","onSortEnd","oldIndex","newIndex","arrayMove","Admin","user","Table","isAuth","component","rest","render","pathname","from","location","ProfileUser","src","nofoto","alt","User","App","exact","path","Boolean","window","hostname","match","initialState","allReducers","combineReducers","action","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.f7c1a6e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nofoto.678046a0.png\";","import React, { Component } from 'react';\r\nimport '../assets/style.scss';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { logIn } from '../actions/index';\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            redirectToPreviousRoute: false,\r\n            username: '',\r\n            password: '',\r\n        }\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        const { username, password } = this.state\r\n        this.props.logIn(\r\n          {\r\n            username,\r\n            password,\r\n          },\r\n          () => {\r\n            this.setState({ redirectToPreviousRoute: true })\r\n          }\r\n        )\r\n    }\r\n\r\n    handleChange = e => {\r\n        const value = e.currentTarget.value\r\n        const fieldName = e.currentTarget.dataset.fieldName\r\n    \r\n        this.setState(prev => ({\r\n          ...prev,\r\n          [fieldName]: value,\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const { errorMsg } = this.props\r\n        // const { from } = location.state || { from: { pathname: '/admin' } }\r\n        // const { fromUser } = location.state || { from: { pathname: '/user' } }\r\n        const { username, password, redirectToPreviousRoute } = this.state\r\n\r\n        if (redirectToPreviousRoute && username === 'admin') {\r\n            return <Redirect to=\"/admin\" />\r\n        }\r\n        else if (redirectToPreviousRoute && username === 'user') {\r\n            return <Redirect to=\"/user\" />\r\n        }\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className=\"enter\">\r\n                    <h1>Log in</h1>\r\n                    <form className=\"form-login\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"enter__login\">\r\n                        <label htmlFor=\"username\" className=\"enter__label\">Login</label>\r\n                        <input type=\"text\" className=\"enter__input\" name=\"username\" placeholder=\"login\" onChange={this.handleChange} value={username} data-field-name=\"username\"/>\r\n                    </div>\r\n                    <div className=\"enter__password\">\r\n                        <label htmlFor=\"password\" className=\"enter__label\">Password</label>\r\n                        <input type=\"password\" className=\"enter__input\" name=\"password\" placeholder=\"password\" onChange={this.handleChange} value={password} data-field-name=\"password\"/>\r\n                    </div>\r\n                    {errorMsg && <p>{errorMsg}</p>}<br />\r\n                    <div className=\"enter__button\">\r\n                        <button type=\"submit\" className=\"enter__btn\">Sign up</button>\r\n                    </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errorMsg: state.auth.errorMsg,\r\n})\r\n  \r\nconst mapDispatchToProps = dispatch => ({\r\n    logIn: (params, cb) => dispatch(logIn(params, cb)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import { LOG_IN, LOG_ERR} from '../actions/types';\r\n\r\nexport function logIn(params, cb) {\r\n    return dispatch => {\r\n      if (checkCredentials(params)) {\r\n        dispatch({\r\n          type: LOG_IN,\r\n          payload: {\r\n            name: params.username,\r\n          },\r\n        })\r\n        cb()\r\n      } \r\n      else if (checkCredentialsUser(params)) {\r\n        dispatch({\r\n          type: LOG_IN,\r\n          payload: {\r\n            name: params.username,\r\n          },\r\n        })\r\n        cb()\r\n      }\r\n      else {\r\n        dispatch({\r\n          type: LOG_ERR,\r\n          payload: {\r\n            errorMsg: 'Имя пользователя или пароль введены не верно',\r\n          },\r\n          error: true,\r\n        })\r\n      }\r\n    }\r\n}\r\n\r\nexport function checkCredentials(params) {\r\n    if (params.username.toLowerCase() !== 'admin' || params.password !== '12345') {\r\n      return false\r\n    }\r\n    return true\r\n}\r\n\r\nexport function checkCredentialsUser(params) {\r\n  if (params.username.toLowerCase() !== 'user' || params.password !== '123') {\r\n    return false\r\n  }\r\n  return true\r\n}","export const LOG_IN = 'LOG_IN';\r\nexport const LOG_ERR = 'LOG_ERR';","import React, {Component} from 'react';\r\nimport {SortableContainer, SortableElement} from 'react-sortable-hoc';\r\nimport arrayMove from 'array-move';\r\nimport { connect } from 'react-redux';\r\nimport '../assets/style.scss';\r\n \r\nconst SortableItem = SortableElement(({value}) => <div>{value}</div>);\r\n \r\nconst SortableList = SortableContainer(({items}) => {\r\n  return (\r\n      <div className=\"table\">\r\n      {items.map((value, index) => (\r\n          <table className=\"table__table\" key={value.id}>\r\n              <thead>\r\n                <tr className=\"table__tr\">\r\n                    <th className=\"table__th\">ФИО</th>\r\n                    <th className=\"table__th\">Отдел</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr className=\"table__tr\">\r\n                    <td className=\"table__td\">\r\n                        {value.name}\r\n                    </td>\r\n                    <td className=\"table__td\">\r\n                        <SortableItem key={`item-${value.id}`} index={index} value={value.department} />\r\n                    </td>\r\n                  </tr>\r\n              </tbody>\r\n          </table>\r\n      ))}\r\n      </div>\r\n  );\r\n});\r\n \r\nclass SortableComponent extends Component {\r\n  state = {\r\n    items: this.props.userList\r\n    };\r\n  onSortEnd = ({oldIndex, newIndex}) => {\r\n    this.setState(({items}) => ({\r\n      items: arrayMove(items, oldIndex, newIndex),\r\n    }));\r\n  };\r\n  render() {\r\n    return <SortableList items={this.state.items} onSortEnd={this.onSortEnd} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userList: state.userList,\r\n})\r\n\r\nexport default connect(mapStateToProps)(SortableComponent);","import React, { Component } from 'react';\r\nimport '../assets/style.scss';\r\nimport { connect } from 'react-redux';\r\nimport Table from './Table';\r\n\r\nclass Admin extends Component {\r\n    render() {\r\n        const { user } = this.props;\r\n        return (\r\n            <div className=\"admin\">\r\n                <div className=\"container\">\r\n                    <div className=\"admin__loguser\">\r\n                        <h2>Профиль</h2>\r\n                        <p>Вас зовут: <span>{user.name}</span></p>\r\n                    </div>\r\n                    <Table />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.auth.user,\r\n})\r\n  \r\n// const mapDispatchToProps = dispatch => ({})\r\n\r\nexport default connect(mapStateToProps)(Admin);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        rest.isAuth ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/',\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuth: state.auth.user,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react'\r\nimport nofoto from '../assets/image/nofoto.png';\r\n\r\nexport default function ProfileUser() {\r\n    return (\r\n        <div>\r\n            <div className=\"profile\">\r\n                <div className=\"profile__foto\">\r\n                    <img src={nofoto} alt=\"nofoto\"/>\r\n                </div>\r\n                <div className=\"profile__data\">\r\n                    <p>Полное имя: <span>Иванов Иван Иванович</span></p>\r\n                    <p>Отдел: <span>СТО</span></p>\r\n                    <p>Email: <span>ivanov@gmail.com</span></p>\r\n                    <p>Телефон: <span>+71234567890</span></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../assets/style.scss';\r\nimport { connect } from 'react-redux';\r\nimport ProfileUser from './ProfileUser';\r\n\r\nclass User extends Component {\r\n    render() {\r\n        const { user } = this.props;\r\n        return (\r\n            <div className=\"user\">\r\n                <div className=\"container\">\r\n                    <div className=\"user__loguser\">\r\n                        <h2>Профиль</h2>\r\n                        <p>Вас зовут: <span>{user.name}</span></p>\r\n                        <ProfileUser />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.auth.user,\r\n})\r\n  \r\n// const mapDispatchToProps = dispatch => ({})\r\n\r\nexport default connect(mapStateToProps)(User);","import React from 'react';\r\nimport './App.scss';\r\nimport Login from './component/Login';\r\nimport Admin from './component/Admin';\r\nimport PrivateRoute from './containers/PrivateRoute';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport User from './component/User';\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <PrivateRoute path=\"/admin\" component={Admin}/>\r\n          <PrivateRoute path=\"/user\" component={User}/>\r\n        </Switch>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { LOG_IN, LOG_ERR} from '../actions/types';\r\n\r\nconst initialState = {\r\n    user: null,\r\n    errorMsg: ''\r\n};\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case LOG_IN:\r\n            return {...state, user: {name: action.payload.name}};\r\n        case LOG_ERR:\r\n            return {...state, errorMsg: action.payload.errorMsg};\r\n        default:\r\n            return state;\r\n    }\r\n}","export default function () {\r\n    return [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"Иванов Иван Иванович\",\r\n            \"department\": \"СТО\",\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"name\": \"Калинина Таисия Кирилловна\",\r\n            \"department\": \"СТО\",\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"name\": \"Ильин Артемий Тимофеевич\",\r\n            \"department\": \"ДРП\",\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"name\": \"Соловьева Вероника Романовна\",\r\n            \"department\": \"ИВЦ\",\r\n        },\r\n    ]\r\n}","import { combineReducers } from 'redux';\r\nimport authReducer from './auth.reducer';\r\nimport userListReducer from './user.reducer';\r\n\r\nconst allReducers = combineReducers ({\r\n   auth: authReducer,\r\n   userList: userListReducer\r\n}) \r\n\r\nexport default allReducers;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport allReducers from './reducers';\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst middleware = composeEnhancer(\r\n  applyMiddleware(thunk)\r\n);\r\n\r\nconst store = createStore(allReducers, middleware);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}